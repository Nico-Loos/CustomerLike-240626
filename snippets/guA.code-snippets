{
	"Snippet (get&use Academy): Enable Assisted Setup (>=18.0) ": {
        "description": "Snippet (get&use Academy): Enable Assisted Setup (>=18.0)",
        "prefix": "tassistedsetupguaafterv18",
		"scope": "al",
        "body": [
            "codeunit ${1:id} \"${2:Name} Meth\"",
            "{",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnRegisterAssistedSetup', '', false, false)]",
            "\tlocal procedure AddExtensionAssistedSetup_OnRegisterAssistedSetup();",
            "\tvar",
            "\t\tGuidedExperience: Codeunit \"Guided Experience\";",
            "\t\tCurrentGlobalLanguage: Integer;",
            "\t\tWizardTitleTxt: label '${3:Title in Assited Setup List}';",
            "\t\tWizardDescTxt: label '${4:Description in Assited Setup List}';",
            "\tbegin",
            "\t\tCurrentGlobalLanguage := GlobalLanguage();",
            "\t\tGuidedExperience.InsertAssistedSetup(",
			"\t\t\tWizardTitleTxt, '', WizardDescTxt, 2,",
			"\t\t\tObjectType::Page, GetPageId(), \"Assisted Setup Group\"::Extensions,",
			"\t\t\t'', \"Video Category\"::Extensions, '');",
            "\t\tGlobalLanguage(1033);",
			"\t\tGuidedExperience.AddTranslationForSetupObjectTitle(",
            "\t\t\t\"Guided Experience Type\"::\"Assisted Setup\",",
            "\t\t\tObjectType::Page, GetPageId(), 1033, WizardTitleTxt);",
        	"\t\tGuidedExperience.AddTranslationForSetupObjectDescription(",
            "\t\t\t\"Guided Experience Type\"::\"Assisted Setup\",",
            "\t\t\tObjectType::Page, GetPageId(), 1033, WizardDescTxt);",
            "\t\tGlobalLanguage(CurrentGlobalLanguage);",
            "",
            "\t\t\tUpdateStatus();",
            "\tend;",
            "",
            "\t//[x]: remove the following subscriber if not necessary to run",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnReRunOfCompletedAssistedSetup', '', false, false)]",
            "\tlocal procedure OnReRunOfCompletedSetup(ExtensionID: Guid; ObjectType: ObjectType; ObjectID: Integer; var Handled: Boolean)",
            "\tvar",
            "\t\tSetupAlreadyDoneQst: Label 'This setup is already done. Do you want to open the setup page instead?';",
            "\tbegin",
            "\t\tif ExtensionId <> GetAppId() then exit;",
            "\t\tif ObjectID <> GetPageId() then exit;",
            "",
            "\t\tif Confirm(SetupAlreadyDoneQst, true) then begin",
            "\t\t\tPage.Run(GetPageId()); //TODO: Might have to be be a different page (like not the wizard, but the setup page instead)",
            "\t\t\tHandled := true;",
            "\t\tend;",
            "\tend;",
            "",
            "\t//TODO: remove the following subscriber if not necessary to run ",
            "\t[EventSubscriber(ObjectType::Codeunit, Codeunit::\"Guided Experience\", 'OnAfterRunAssistedSetup', '', false, false)]",
            "\tlocal procedure OnAfterRunOfSetup(ExtensionID: Guid; ObjectType: ObjectType; ObjectID: Integer)",
            "\tbegin",
            "\t\tif ExtensionId <> GetAppId() then exit;",
            "\t\tif ObjectID <> GetPageId() then exit;",
            "",
			"\t\tUpdateStatus();",
            "\t\t//TODO: put code here to run 'OnAfterRunAssistedSetup' ",
            "\tend;",
            "",
            "\tprocedure UpdateStatus()",
            "\tvar",
            "\t\tRec: Record \"Just Some Table\";",
            "\t\tGuidedExperience: Codeunit \"Guided Experience\";",
            "\tbegin",
            "\t\tif not Rec.Get() then exit;",
            "",
            "\t\tif Rec.Description.ToLower().EndsWith('waldo.be') then  //TODO: You probably are going to want to change this ;-)",
            "\t\t\tGuidedExperience.CompleteAssistedSetup(ObjectType::Page, GetPageId())",
			"\t\telse",
			"\t\t\tGuidedExperience.ResetAssistedSetup(ObjectType::Page, GetPageId());",
            "\tend;",
            "",
			"\t[EventSubscriber(ObjectType::Table, Database::${5:Source Table of yor Wizard}, 'OnAfterModifyEvent', '', true, true)]",
			"\tlocal procedure OnAfterModifySourceTable()",
			"\tbegin",
			"\t\tUpdateStatus();",
			"\tend;",
			"",	
            "\tlocal procedure GetAppId(): Guid",
            "\tvar",
            "\t\tEmptyGuid: Guid;",
            "\t\tInfo: ModuleInfo;",
            "\tbegin",
            "\t\tif Info.Id() = EmptyGuid then",
            "\t\t\tNavApp.GetCurrentModuleInfo(Info);",
            "\t\texit(Info.Id());",
            "\tend;",
            "",
            "\tlocal procedure GetPageId(): Integer",
            "\tbegin",
            "\t\texit(page::\"${6:Your Wizard}\");",
            "\tend;",
            "",
            "\t//TODO: Call \"SomeAssistedSetup.UpdateStatus(); in case the wizard is run without the assisted setup.  It should call the \"UpdateStatus\" of this codeunit.",
            "}",
            ""
        ]
    },

}